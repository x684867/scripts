#	/etc/nodeHappiness.conf
#	
#	(c) 2011 Sam Caldwell.  Public Domain.
#
#	This configuration file used to calculate nodeHappiness.
#
#	'nodeHappiness' is the relative measurement of a node's overall performance
#	for load-balancing purposes.  It is measured on a scale from -100 to +100
#	based on CPU, memory, disk and network statistics:
#
#			-100			0		 +100
#			  |---------------------|---------------------|
#			HUNGRY	SATISFIED	   FULL
#
#	Under this scale, a host with a happiness score approaching -100 (HUNGRY)
#	is under-employed.  As the load increases, the score will approach zero (0)
#	indicating its 'satisfied' status.  If the load continues to increase then
#	the "happiness" score will pass zero (0) and approach +100 (FULL).  As the
#	host "happiness" approaches +100 the host will be more inclined to offload
#	work to other hosts.
#
#	This "happiness" score is calculated as the weighted sum of the CPU, using
#	bogomips and load average, the percentage of free memory and swap memory,
#	the number of disk transactions and the volume of disk i/o (in MB), and the
#	number of bytes per second sent and recieved on all network interfaces.
#
#	The weights used to aggregate "happiness" are determined in this file as the
#	FACTOR-SPECIFIC-WEIGHTS and the OVER-UNDER-WEIGHTS.  When a factor is first
#	read, it is compared to the FACTOR-SPECIFIC-THRESHOLDS.  If the factor is 
#	greater than the 'maximum threshold' the factor is multiplied by the OVER-
#	THRESHOLD.  If the factor is less than the 'minimum threshold' then the 
#	factor is multiplied by the UNDERWEIGHT, but if the factor is greater than
#	the 'maximum threshold' then the factor is multiplied by the OVERWEIGHT.
#	The result is then multiplied by the FACTOR-SPECIFIC-THRESHOLD.  This is 
#	then added to the other weighted factors to produce the final happiness
#	score.
#
#	SCRIPTS:
#
		BOGOMIPS_SCRIPT=getAvgBogoMips.sh
#
#				BOGOMIPS_SCRIPT is the script used to calculate "adjusted 
#				average bogomips" (AAB).
#
		LOADAVERAGE_SCRIPT=getLoadAverage.sh
#
#				LOADAVERAGE_SCRIPT is the script that fetches, parses and 
#				processes the processor load averages.  The result is a comma-
#				delimited list of the current load averages parsed from 
#				/proc/loadavg.
#
		MEMFREE_SCRIPT=getMemFree.sh
#
#				MEMFREE_SCRIPT calculates the percentage of free RAM versus 
#				total RAM and returns a percentage value.
#
		SWAPFREE_SCRIPT=getSwapFree.sh
#
#				SWAPFREE_SCRIPT calculates the percentage of free SWAP space 
#				versus the total SWAP space and returns a percentage value.
#
		DISKTPS_SCRIPT=getDiskTPS.sh
#
#				DISKTPS_SCRIPT calculates the transactions-per-second for every
#				device on the system and returns the average TPS value.
#
		DISKREAD_SCRIPT=getDiskReadsMbps.sh
#
#				DISKREAD_SCRIPT calculates the instantaneous volume of disk
#				reads in Mbps.
#
		DISKWRITE_SCRIPT=getDiskWritesMbps.sh
#
#				DISKWRITE_SCRIPT calculates the instantaneous volume fo disk
#				writes in Mbps.
#
		NETSPEEDIN_SCRIPT=getNetSpeedIn.sh
#
#				NETSPEEDIN_SCRIPT calculates the number of bytes per second 
#				(BPS) received.  This is done as a two-part process.  The script
#				must first read the number of bytes received at this given time.
#				The value is then written to a temporary file along with the 
#				time when the value was sampled.  This is then compared to any
#				previously sampled value, from which the Bytes-per-second value
#				is calculated.
#
		NETSPEEDOUT_SCRIPT=getNetSpeedOut.sh
#
#				NETSPEEDOUT_SCRIPT calculates the number of bytes per second
#				(BPS) received.  This is done as a two-part process.  The script
#				must first read the number of bytes received at this given time.
#				The value is then written to a temporary file along with the 
#				time when the value was sampled.  This is then compared to any
#				previously sampled value, from which the Bytes-per-second value
#				is calculated.
#
#	OVER-UNDER-WEIGHTS:
#
		UNDERTHRESHOLD=0.75
#
#				UNDERTHRESHOLD is the coefficient by which any factor will be 
#				multiplied if the factor is LESS than the factor-specific
#				threshold.
#	
		OVERTHRESHOLD=2
#
#				OVERTHRESHOLD is the coefficient by which any factor will be
#				multiplied if the factor is MORE than the factor-specific
#				threshold.
#
#	FACTOR-SPECIFIC-WEIGHTS:
#
		CPUBOGOMIPS=10
#
#				CPUBOGOMIPS is the factor-specific coefficient for the adjusted
#				average bogomips value.
#
		CPULOADAVERAGE=(10,5,1)
#
#				CPULOADAVERAGE is an array of factor-specific coefficients for
#				the current load average values.
#
		MEMFREE=20
#
#				MEMFREE is the coefficient by which the free-memory factor will
#				be weighted to determine its relative value compared to the
#				other factors.
#
		SWAPFREE=10
#				
#				SWAPFREE is the coefficient by which the swap-memory factor will
#				be weighted to determine its relative value compared to the 
#				other factors.
#
		DISKTPS=10
#
#				DISKTPS is the coefficient by which the number of transactions
#				per second are multiplied.
#
		DISKREADSMBPS=10
#
#				DISKREADSMPBS is the coefficient by which the volume of disk
#				reads (in MBps) is multiplied.
#
		DISKWRITESMBPS=10
#
#				DISKWRITESMBPS is the coefficient by which the volume of disk
#				writes (in MBps) is multiplied.
#
		NETINBPS=10
#
#				NETINBPS is the coefficient by which the number of bytes rec'd
#				by a host is multiplied.
#
		NETOUTBPS=10
#
#				NETOUTBPS is the coefficient by which the number of bytes sent
#				by a host is multiplied.
#
#	FACTOR-SPECIFIC-THRESHOLDS:
#
		CPUBOGOMIN=3000
#
#			CPUBOGOMIN is the minimum factor-specific threshold for bogomips.
#
		CPUBOGOMAX=9999
#
#			CPUBOGOMAX is the maximum factor-specific threshold for bogomips.
#			This is presumptively set to a default of '9999' since no CPU should
#			ever exceed this value.
#
		CPULOADMIN=(0.30,0.02,0.01)
#
#				CPULOADMIN is an array of minimum CPU load averages for the 
#				three load average intervals (5-, 10-, and 15-minutes) by which
#				the actual load average data is multiplied.
#
		CPULOADMAX=(2,4,6)
#
#				CPULOADMAX is an array of maximum CPU load averages for the
#				three load average intervals (5-, 10-, and 15-minutes) by which
#				the actual load average data is multiplied.
#
		MEMFREEMIN=95
#
#				MEMFREEMIN is the minimum factor-specific threshold for free
#				memory (RAM).
#
		MEMFREEMAX=5
#
#				MEMFREEMAX is the maximum factor-specific threshold for free
#				memory (RAM).
#
		SWAPFREEMIN=1
#
#				SWAPFREEMIN is the minimum factor-specific threshold for free
#				swap space.
#
		SWAPFREEMAX=20
#
#				SWAPFREEMAX is the maximum factor-specific threshold for free
#				swap space.
#
		DISKTPSMIN=0.01
#
#				DISKTPSMIN is the minimum threshold for transactions-per-second
#				on all disk devices.
#
		DISKTPSMAX=20
#
#				DISKTPSMAX is the maximum number of desired transactions-per-
#				second on all disk devices.
#
		DISKREADSMBPSMIN=10
#
#				DISKREADSMPBSMIN is the minimum threshold for disk read volume.
#
		DISKREADSMBPSMAX=2900
#
#				DISKREADSMBPSMAX is the maximum threshold for disk write volume.
#
		DISKWRITESMBPSMIN=10
#
#				DISKWRITEMBPSMIN is the minimum threshold for disk read volume.
#
		DISKWRITESMBPSMAX=2900
#
#				DISKWRITESMBPS is the minimum threshold for disk write volume.
#
		NETINBPSMIN=10
#
#				NETINBPSMIN is the minimum network threshold for per-second 
#				volume.
#
		NETINBPSMAX=2500000000
#
#				NETINBPSMAX is the maximum network threshold for per-second
#				volume.
#
		NETOUTBPSMIN=10
#
#				NETOUTBPSMIN is the minimum network threshold for per-second 
#				volume.
#
		NETOUTBPSMAX=2500000000
#
#				NETOUTBPSMAX is the maximum network threshold for per-second
#				volume.
#